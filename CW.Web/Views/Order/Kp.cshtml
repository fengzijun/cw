@{
    ViewBag.Title = "Input";
}

<script type="text/javascript">
    var required = '<span style="color:red;font-weight:bold" data-qtip="Required">*</span>';
    var myMask = new Ext.LoadMask(Ext.getBody(), {
        msg: "Please wait..."
    });

    Ext.require(['*']);

    Ext.define('model', {
        extend: 'Ext.data.Model',
        fields: [
          { name: 'ID', type: 'string' },
          { name: 'name', type: 'string' },
          { name: 'company', type: 'string' },
          { name: 'kpname', type: 'string' },
          { name: 'sh', type: 'string' },
          { name: 'address', type: 'string' },
          { name: 'tel', type: 'string' },
          { name: 'bank', type: 'string' },
          { name: 'account', type: 'string' }
          ]
    });

    Ext.define('kptype', {
        extend: 'Ext.data.Model',
        fields: [
          { name: 'ID', type: 'string' },
          { name: 'name', type: 'string' },
          { name: 'type', type: 'string' },
          { name: 'projectname', type: 'string' }
          ]
    });

    Ext.define('kp', {
        extend: 'Ext.data.Model',
        fields: [
          { name: 'ID', type: 'string' },
          { name: 'orderid', type: 'string' },
          { name: 'kptt', type: 'string' },
          { name: 'type', type: 'string' },
          { name: 'project', type: 'string' },
          { name: 'money', type: 'string' },
          { name: 'bcmoney', type: 'string' },
          { name: 'company', type: 'string' },
          { name: 'bjsj', type: 'string' },
          { name: 'remark', type: 'string' },
          { name: 'other', type: 'string' },
          { name: 'manageridea', type: 'string' },
          { name: 'managerreason', type: 'string' },
          { name: 'topmanageridea', type: 'string' },
          { name: 'topmanagerreason', type: 'string' },
          { name: 'managercheck', type: 'string' }
          ]
    });

    var kptypestore = new Ext.data.Store({
        model: 'kptype',
        pageSize: 5,
        proxy: {
            type: 'ajax',
            url: '/systemmanager/GetKpTypesByType',
            reader: {
                type: 'json',
                root: 'rows',
                idProperty: 'ID',
                extraParams: { type: Ext.ComponentQuery.query('#multiColumnForm [name=type]')[0] == undefined ? "" : Ext.ComponentQuery.query('#multiColumnForm [name=type]')[0].getValue() },
                totalProperty: 'total'
            }
        },

        autoLoad: false//自动加载  
    });

    var editkptypestore = new Ext.data.Store({
        model: 'kptype',
        pageSize: 5,
        proxy: {
            type: 'ajax',
            url: '/systemmanager/GetKpTypesByType',
            reader: {
                type: 'json',
                root: 'rows',
                idProperty: 'ID',
                extraParams: { type: Ext.ComponentQuery.query('#multiColumnForm [name=type]')[0] == undefined ? "" : Ext.ComponentQuery.query('#multiColumnForm [name=type]')[0].getValue() },
                totalProperty: 'total'
            }
        },

        autoLoad: false//自动加载  
    });

    kptypestore.on('beforeload', function (store, operation, eOpts) {
        operation.params = {
            type: Ext.ComponentQuery.query('#multiColumnForm [name=type]')[0].getValue()
        };

    }, this);


    editkptypestore.on('beforeload', function (store, operation, eOpts) {
        operation.params = {
            type: Ext.ComponentQuery.query('#kppanel [name=type]')[0].getValue()
        };

    }, this);

    var customstore = new Ext.data.Store({
        fields: ['ID', 'name','company','kpname','sh','address','tel','bank','account'],
        proxy: {
            type: 'ajax',
            url: '/manager/GetAllCustomers',
            reader: {
                type: 'json',
                root: 'rows',
                idProperty: 'ID',
                totalProperty: 'total'
            }
        },

        autoLoad: true//自动加载  
    });

    var companystore = new Ext.data.Store({

        fields: ['abbr', 'name'],
        data: [
                    { "abbr": "昆山易得", "name": "昆山易得" },
                    { "abbr": "苏州易开", "name": "苏州易开" },
                    { "abbr": "苏州海易", "name": "苏州海易" },
                    { "abbr": "苏州浦瑞道", "name": "苏州浦瑞道" },
                    { "abbr": "太仓易开", "name": "太仓易开" }

                ]
    });

    var typestore = new Ext.data.Store({

        fields: ['abbr', 'name'],
        data: [
                    { "abbr": "增票", "name": "增票" },
                    { "abbr": "普票", "name": "普票" }


                ]
    });

    Ext.onReady(function () {


        var top = Ext.widget({
            xtype: 'form',
            id: 'multiColumnForm',
            collapsible: true,
            frame: true,
            title: '开票',
            bodyPadding: '5 5 0',
            renderTo: 'main',

            bodyBorder: 0,
            fieldDefaults: {
                labelWidth: 80
            },
            defaults: {
                margins: '0 0 10 0'
            },
            items: [{
                xtype: 'fieldcontainer',
                layout: 'hbox',
                defaultType: 'textfield',
                fieldDefaults: {
                    labelAlign: 'left'
                },
                defaults: {
                    type: 'vbox',
                    padding: '5',
                    align: 'left'
                },
                bodyPadding: '5 5 0',
                items: [{

                    fieldLabel: '开票抬头',
                    name: "kptt",
                    id: "kptt",
                    xtype: 'combo',
                    store: customstore,
                    queryMode: 'remote',
                    displayField: 'kpname',
                    valueField: 'ID',
                    flex: 1,
                    autoSelect: true,
                    listeners: {
                        change: function (obj, newval, oldval) {
                            customstore.each(function (record) {
                                //fields: ['ID', 'name','company','kpname','sh','address','tel','bank','account'],
                                if (record.get("ID") == newval) {
                                    gstore.removeAll();
                                    gstore.add({ company: record.get("company"), sh: record.get("sh"), address: record.get("address"), tel: record.get("tel"), bank: record.get("bank"), account: record.get("account") });
                                    var orderFrom = Ext.ComponentQuery.query('#multiColumnForm [name=company]');
                                    orderFrom[0].setValue(record.get("company"));
                                }
                            })
                        }

                    }

                }, {
                    flex: 1,
                    name: 'orderid',
                    fieldLabel: '订单编号',
                    allowBlank: false

                }, {

                    fieldLabel: '开票类别',
                    name: "type",
                    xtype: 'combo',
                    store: typestore,
                    queryMode: 'remote',
                    displayField: 'name',
                    valueField: 'name',
                    flex: 1,
                    value: "增票",
                    autoSelect: true,
                    listeners: {
                        change: function (obj, newval, oldval) {
                            if (newval != oldval) {
                                orderFrom = Ext.ComponentQuery.query('#multiColumnForm [name=project]');
                                orderFrom[0].clearValue();
                                kptypestore.load({ params: { type: newval} });
                            }
                        }

                    }

                }]
            }, {
                xtype: 'fieldcontainer',
                layout: 'hbox',
                defaultType: 'textfield',
                fieldDefaults: {
                    labelAlign: 'left'
                },
                defaults: {
                    type: 'vbox',
                    padding: '5',
                    align: 'left'
                },
                bodyPadding: '5 5 0',
                items: [{

                    name: 'project',
                    fieldLabel: '开票项目',
                    xtype: 'combo',
                    store: kptypestore,
                    queryMode: 'remote',
                    displayField: 'projectname',
                    valueField: 'projectname',
                    flex: 1,
                    autoSelect: true

                }, {
                    name: 'money',
                    fieldLabel: '开票金额',
                    flex: 1,
                    allowBlank: false

                }, {
                    name: 'company',
                    fieldLabel: '开票公司',
                    allowBlank: false,
                    flex: 1,
                    xtype: 'combo',
                    store: companystore,
                    queryMode: 'local',
                    displayField: 'name',
                    valueField: 'abbr',
                    flex: 1,
                    value: "昆山易得",
                    forceSelection: true

                }]
            }, {
                xtype: 'fieldcontainer',
                layout: 'hbox',
                defaultType: 'textfield',
                fieldDefaults: {
                    labelAlign: 'left'
                },
                defaults: {
                    type: 'vbox',
                    padding: '5',
                    align: 'left'
                },
                bodyPadding: '5 5 0',
                items: [{
                    name: 'other',
                    fieldLabel: '其他说明',
                    allowBlank: false,
                    flex: 1

                }, {
                    name: 'remark',
                    fieldLabel: '备注',
                    allowBlank: false,
                    flex: 1

                }]
            }],

            buttons: [{
                text: '保存',
                iconCls: "Application",
                handler: function () {
                    if (this.up('form').getForm().isValid()) {
                        //alert(Ext.JSON.encode(this.up('form').getForm().getValues()));
                        var temp = {};
                        var orderFrom = Ext.ComponentQuery.query('#multiColumnForm [name=kptt]');
                        temp.kptt = orderFrom[0].getRawValue();

                        orderFrom = Ext.ComponentQuery.query('#multiColumnForm [name=orderid]');
                        temp.orderid = orderFrom[0].getValue();
                        orderFrom = Ext.ComponentQuery.query('#multiColumnForm [name=type]');
                        temp.type = orderFrom[0].getValue();
                        orderFrom = Ext.ComponentQuery.query('#multiColumnForm [name=project]');
                        temp.project = orderFrom[0].getValue();
                        orderFrom = Ext.ComponentQuery.query('#multiColumnForm [name=money]');
                        temp.money = orderFrom[0].getValue();


                        orderFrom = Ext.ComponentQuery.query('#multiColumnForm [name=company]');
                        temp.company = orderFrom[0].getValue();

                        orderFrom = Ext.ComponentQuery.query('#multiColumnForm [name=remark]');
                        temp.remark = orderFrom[0].getValue();
                        orderFrom = Ext.ComponentQuery.query('#multiColumnForm [name=other]');
                        temp.other = orderFrom[0].getValue();

                        $.ajax({
                            url: '/order/Kp',
                            type: 'POST',
                            dataType: 'json',
                            data: $.toJSON({ data: temp }),
                            contentType: 'application/json; charset=utf-8',
                            success: function (data) {

                            }
                        }).done(function (data) {
                            if (data.Result) {
                                showsucmsg(data.Msg);
                                kpstore.load();
                            }
                            else {
                                showsucmsg(data.Msg);
                            }
                        });


                    }
                }
            }, {
                text: '重置',
                iconCls: "Cancel",
                handler: function () {
                    this.up('form').getForm().reset();
                }
            }]
        });

        //        fields: ['ID', 'name','company','kpname','sh','address','tel','bank','account'],
        var columns = [//配置表格列  

                {header: "公司全称", width: 120, dataIndex: "company" },
                { header: "税号", width: 120, dataIndex: "sh" },
                { header: "地址", width: 120, dataIndex: "address" },
                { header: "电话", width: 120, dataIndex: "tel" },
                { header: "银行", width: 120, dataIndex: "bank" },
                { header: "帐号", width: 120, dataIndex: "account" }

                ];

        var gstore = Ext.create('Ext.data.Store', {
            model: 'model',
            data: []
        });

        var grid = Ext.create('Ext.grid.Panel', {
            frame: true,
            forceFit: true,
            columnLines: true,
            title: "公司信息",
            store: gstore,
            renderTo: 'detail',
            columns: columns
        });

        var kpstore = Ext.create('Ext.data.Store', {
            model: 'kp',
            pageSize: 5,
            proxy: {
                type: 'ajax',
                url: '/order/GetUserkp',
                reader: {
                    type: 'json',
                    root: 'rows',
                    idProperty: 'ID',
                    totalProperty: 'total'
                }
            },

            autoLoad: true//自动加载  
        });

        var kpcolumns = [//配置表格列  

                {header: "订单编号", dataIndex: "orderid" },
                { header: "开票抬头", dataIndex: "kptt" },
                { header: "开票类型", dataIndex: "type" },
                { header: "开票金额", dataIndex: "money" },
                { header: "开票差额", dataIndex: "bcmoney" },
                { header: "补交税金", dataIndex: "bjsj" },
                { header: "审核是否通过", renderer: function (value, metaData, record, row, col, store, gridView) {
                    if (record.get("managercheck") == "false") {
                        return "<img src='/content/images/cross.gif'/>";
                    }
                    else {
                        return "<img src='/content/images/accept.gif'/>";
                    }
                }
                },
                { header: "意见", renderer: function (value, metaData, record, row, col, store, gridView) {
                    if (record.get("manageridea") != null && record.get("manageridea") != undefined && record.get("manageridea").length > 2) {
                        return record.get("manageridea");
                    }
                    else if (record.get("topmanageridea") != null && record.get("topmanageridea") != undefined && record.get("topmanageridea").length > 2) {
                        return record.get("topmanageridea");
                    }

                }
                },
                 { header: "原因", renderer: function (value, metaData, record, row, col, store, gridView) {
                     if (record.get("managerreason") != null && record.get("managerreason") != undefined && record.get("managerreason").length > 2) {
                         return record.get("managerreason");
                     }
                     else if (record.get("topmanagerreason") != null && record.get("topmanagerreason") != undefined && record.get("topmanagerreason").length > 2) {
                         return record.get("topmanagerreason");
                     }

                 }
                 }

                ];

        var kpgrid = Ext.create('Ext.grid.Panel', {
            frame: true,
            forceFit: true,
            columnLines: true,
            title: "我的开票记录",
            store: kpstore,
            selModel: Ext.create('Ext.selection.CheckboxModel'),
            renderTo: 'detail',
            dockedItems: [{
                xtype: 'pagingtoolbar',
                store: kpstore, // same store GridPanel is  
                // using  
                dock: 'bottom',
                displayInfo: true
            }],
            tbar: [{
                xtype: 'button',
                text: '修改',
                iconCls: "Applicationedit",
                handler: kpedit

            }, {
                xtype: 'button',
                text: '删除',
                iconCls: "Applicationdelete",
                handler: kpdel
            }],
            renderTo: "mykp",
            columns: kpcolumns
        });

        kptypestore.load({ params: { type: "增票"} });

        //编辑
        function kpedit() {
            var records = kpgrid.getSelectionModel().getSelection();
            if (records.length != 1) {
                showerrormsg("请选择一行数据");
                return;
            }

            var form = Ext.create('Ext.panel.Panel', {
                border: 0,
                id: 'kppanel',
                bodyPadding: 5,
                autoScroll: true,
                layout: {
                    type: 'vbox',       // Arrange child items vertically
                    align: 'stretch',    // Each takes up full width
                    padding: 5
                },

                items: [{

                    fieldLabel: '开票抬头',
                    name: "editkptt",
                    id: "editkptt",
                    xtype: 'combo',
                    store: customstore,
                    queryMode: 'remote',
                    displayField: 'kpname',
                    valueField: 'ID',
                    autoSelect: true,
                    listeners: {
                        change: function (obj, newval, oldval) {
                            customstore.each(function (record) {
                                //fields: ['ID', 'name','company','kpname','sh','address','tel','bank','account'],
                                if (record.get("ID") == newval) {
                                    gstore.removeAll();
                                    gstore.add({ company: record.get("company"), sh: record.get("sh"), address: record.get("address"), tel: record.get("tel"), bank: record.get("bank"), account: record.get("account") });
                                    var orderFrom = Ext.ComponentQuery.query('#multiColumnForm [name=company]');
                                    orderFrom[0].setValue(record.get("company"));
                                }
                            })
                        }

                    }

                }, {

                    fieldLabel: '开票类别',
                    name: "type",

                    xtype: 'combo',
                    store: typestore,
                    queryMode: 'remote',
                    displayField: 'name',
                    valueField: 'name',
                    value: "增票",
                    autoSelect: true,
                    listeners: {
                        change: function (obj, newval, oldval) {
                            if (newval != oldval) {
                                orderFrom = Ext.ComponentQuery.query('#kppanel [name=project]');
                                orderFrom[0].clearValue();
                                kptypestore.load({ params: { type: newval} });
                            }
                        }

                    }

                }, {

                    name: 'project',
                    fieldLabel: '开票项目',
                    xtype: 'combo',
                    store: editkptypestore,
                    queryMode: 'remote',
                    displayField: 'projectname',
                    valueField: 'projectname',
                    autoSelect: true

                }, {
                    name: 'money',
                    fieldLabel: '开票金额',
                    xtype: "textfield",
                    allowBlank: false

                }, {
                    name: 'company',
                    fieldLabel: '开票公司',
                    allowBlank: false,
                    xtype: 'combo',
                    store: companystore,
                    queryMode: 'local',
                    displayField: 'name',
                    valueField: 'abbr',
                    value: "昆山易得",
                    forceSelection: true

                }, {
                    name: 'other',
                    fieldLabel: '其他说明',
                    xtype: "textfield",
                    allowBlank: false

                }, {
                    name: 'remark',
                    fieldLabel: '备注',
                    xtype: "textfield",
                    allowBlank: false


                }]
            });

            var win = Ext.create('Ext.window.Window', {
                title: '编辑开票',
                collapsible: true,
                animCollapse: true,
                maximizable: true,
                width: 400,
                height: 450,
                minWidth: 300,
                minHeight: 200,
                autoScroll: true,
                layout: 'fit',
                items: form,
                dockedItems: [{
                    xtype: 'toolbar',
                    dock: 'bottom',
                    ui: 'footer',
                    layout: {
                        pack: 'center'
                    },
                    items: [{
                        minWidth: 80,
                        text: '保存',

                        iconCls: "Application",
                        handler: editkppost
                    }, {
                        minWidth: 80,
                        text: '取消',
                        iconCls: "Cancel",
                        handler: function () {
                            win.close();
                        }
                    }]
                }]
            });

            win.show();

            var orderFrom = Ext.ComponentQuery.query('#kppanel [name=editkptt]');
            orderFrom[0].setValue(records[0].get("kptt"));
            orderFrom = Ext.ComponentQuery.query('#kppanel [name=type]');
            orderFrom[0].setValue(records[0].get("type"));

            editkptypestore.load({ params: { type: records[0].get("type") }, callback: function () {
                orderFrom = Ext.ComponentQuery.query('#kppanel [name=project]');
                orderFrom[0].setValue(records[0].get("project"));
            }
            })


            orderFrom = Ext.ComponentQuery.query('#kppanel [name=money]');
            orderFrom[0].setValue(records[0].get("money"));
            orderFrom = Ext.ComponentQuery.query('#kppanel [name=company]');
            orderFrom[0].setValue(records[0].get("company"));
            orderFrom = Ext.ComponentQuery.query('#kppanel [name=other]');
            orderFrom[0].setValue(records[0].get("other"));
            orderFrom = Ext.ComponentQuery.query('#kppanel [name=remark]');

            orderFrom[0].setValue(records[0].get("remark"));





            function editkppost() {

                var temp = {};
                var orderFrom = Ext.ComponentQuery.query('#kppanel [name=editkptt]');
                temp.kptt = orderFrom[0].getValue();
                orderFrom = Ext.ComponentQuery.query('#kppanel [name=type]');
                temp.type = orderFrom[0].getValue();
                orderFrom = Ext.ComponentQuery.query('#kppanel [name=project]');
                temp.project = orderFrom[0].getValue();
                orderFrom = Ext.ComponentQuery.query('#kppanel [name=money]');
                temp.money = orderFrom[0].getValue();
                orderFrom = Ext.ComponentQuery.query('#kppanel [name=other]');
                temp.other = orderFrom[0].getValue();
                orderFrom = Ext.ComponentQuery.query('#kppanel [name=remark]');
                temp.remark = orderFrom[0].getValue();
                orderFrom = Ext.ComponentQuery.query('#kppanel [name=company]');
                temp.company = orderFrom[0].getValue();
                temp.ID = records[0].get("ID");

                $.ajax({
                    url: '/order/editkp',
                    type: 'POST',

                    dataType: 'json',
                    data: $.toJSON({ data: temp }),
                    contentType: 'Application/json; charset=utf-8',
                    success: function (data) {

                    }
                }).done(function (data) {
                    if (data.Result) {
                        showsucmsg(data.Msg);

                        kpstore.removeAll();
                        kpstore.load();
                        win.close();
                    }
                    else {
                        showsucmsg(data.Msg);
                    }
                });
            }
        }

        function kpdel() {
            var records = kpgrid.getSelectionModel().getSelection();
            if (records == undefined || records.length == 0) {
                showerrormsg("请选择一行数据");
                return;
            }
            var ids = [];

            Ext.Array.each(records, function (rec) {
                //names.push(rec.get('text'));
                //将选中的节点的ID保存
                ids.push(rec.get('ID'));
            });
            var idsstr = ids.join(",");

            Ext.MessageBox.confirm("提示信息", "你确定删除吗？", function (btn) {
                if (btn == "yes") {
                    Ext.Ajax.request({
                        url: '/order/deletekp',
                        Method: 'POST',
                        params: {
                            ids: idsstr

                        },
                        success: function (response) {
                            //var text = response.responseText;
                            // process server response here

                            showsucmsg(Ext.JSON.decode(response.responseText).Msg);
                            if (Ext.JSON.decode(response.responseText).Result) {
                                kpgrid.store.load();
                            }
                        }
                    });
                }
            })
        }


    });
   


</script>
<div id="main">

</div>
<div id="detail">

</div>

<div id="mykp">

</div>
